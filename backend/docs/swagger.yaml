basePath: /api/v1
definitions:
  models.BankStatement:
    properties:
      accountno:
        type: string
      balance:
        type: number
      bankaccountID:
        type: integer
      bankcode:
        type: integer
      bankname:
        type: string
      beforebalance:
        type: number
      bet_amount:
        type: number
      betAmount:
        type: number
      channel:
        type: string
      createdAt:
        type: string
      deletionAt:
        type: string
      detail:
        type: string
      id:
        description: gorm.Model
        type: integer
      ismanual:
        type: integer
      prefix:
        type: string
      qrExpireDate:
        type: string
      statementType:
        type: string
      status:
        type: string
      transactionDate:
        type: string
      transactionamount:
        type: number
      uid:
        type: string
      unix:
        type: integer
      updatedAt:
        type: string
      userid:
        type: integer
      walletid:
        type: integer
    type: object
  models.SwaggerBankStatement:
    properties:
      accountno:
        type: string
      balance:
        type: number
      bankaccountID:
        type: integer
      bankcode:
        type: integer
      bankname:
        type: string
      beforebalance:
        type: number
      bet_amount:
        type: number
      betAmount:
        type: number
      channel:
        type: string
      createdAt:
        type: string
      deletionAt:
        type: string
      detail:
        type: string
      id:
        type: integer
      ismanual:
        type: integer
      prefix:
        type: string
      qrExpireDate:
        type: string
      statementType:
        type: string
      status:
        type: string
      transactionDate:
        type: string
      transactionamount:
        type: number
      uid:
        type: string
      unix:
        type: integer
      updatedAt:
        type: string
      userid:
        type: integer
      walletid:
        type: integer
    type: object
  models.SwaggerBody:
    properties:
      prefix:
        type: string
    type: object
  models.SwaggerTransactionSub:
    properties:
      afterBalance:
        type: number
      balance:
        type: number
      beforeBalance:
        type: number
      betAmount:
        type: number
      commissionAmount:
        type: number
      createdAt:
        type: string
      currencyID:
        type: integer
      deletedAt:
        type: string
      gameID:
        type: string
      gameNumber:
        type: string
      gameProvide:
        type: string
      gameRoundID:
        type: string
      gameType:
        type: integer
      id:
        type: integer
      isAction:
        type: string
      isEndRound:
        type: integer
      isFeature:
        type: integer
      isFeatureBuy:
        type: integer
      jackpotAmount:
        type: number
      jpbet:
        type: number
      memberID:
        type: integer
      memberName:
        type: string
      messageID:
        type: string
      operatorCode:
        type: string
      operatorID:
        type: integer
      payoutAmount:
        type: number
      payoutDetail:
        type: string
      prefix:
        type: string
      productID:
        type: integer
      providerID:
        type: integer
      providerLineID:
        type: integer
      requestTime:
        type: string
      settlementDate:
        type: string
      sign:
        type: string
      status:
        type: integer
      transactionAmount:
        type: number
      transactionID:
        type: string
      updatedAt:
        type: string
      validBetAmount:
        type: number
      wagerID:
        type: integer
    type: object
  models.SwaggerUser:
    properties:
      actived:
        type: string
      balance:
        type: number
      bankname:
        type: string
      banknumber:
        type: string
      beforebalance:
        type: number
      betamount:
        type: number
      createdAt:
        type: string
      credit:
        type: number
      deletionAt:
        type: string
      deposit:
        type: number
      firstname:
        type: string
      fullname:
        type: string
      id:
        type: integer
      lastname:
        type: string
      lose:
        type: number
      otpAuthUrl:
        type: string
      partnersKey:
        type: string
      password:
        type: string
      preferredname:
        type: string
      prefix:
        type: string
      proID:
        type: string
      proStatus:
        type: string
      providerPassword:
        type: string
      role:
        type: string
      salt:
        type: string
      secret:
        type: string
      status:
        type: integer
      tempSecret:
        type: string
      token:
        type: string
      turnover:
        type: number
      updatedAt:
        type: string
      username:
        type: string
      walletid:
        type: integer
      win:
        type: number
      withdraw:
        type: number
    type: object
  models.TransactionSub:
    properties:
      afterBalance:
        type: number
      balance:
        type: number
      beforeBalance:
        type: number
      betAmount:
        type: number
      commissionAmount:
        type: number
      createdAt:
        type: string
      currencyID:
        type: integer
      deletedAt:
        type: string
      gameID:
        type: string
      gameNumber:
        type: string
      gameProvide:
        type: string
      gameRoundID:
        type: string
      gameType:
        type: integer
      id:
        description: gorm.Model
        type: integer
      isAction:
        type: string
      isEndRound:
        type: integer
      isFeature:
        type: integer
      isFeatureBuy:
        type: integer
      jackpotAmount:
        type: number
      jpbet:
        type: number
      memberID:
        type: integer
      memberName:
        type: string
      messageID:
        type: string
      operatorCode:
        type: string
      operatorID:
        type: integer
      payoutAmount:
        type: number
      payoutDetail:
        type: string
      prefix:
        type: string
      productID:
        type: integer
      providerID:
        type: integer
      providerLineID:
        type: integer
      requestTime:
        type: string
      settlementDate:
        type: string
      sign:
        type: string
      status:
        type: integer
      transactionAmount:
        type: number
      transactionID:
        type: string
      updatedAt:
        type: string
      validBetAmount:
        type: number
      wagerID:
        type: integer
    type: object
  models.Users:
    properties:
      actived:
        type: string
      balance:
        type: number
      bankname:
        type: string
      banknumber:
        type: string
      beforebalance:
        type: number
      betamount:
        type: number
      createdAt:
        type: string
      credit:
        type: number
      deletionAt:
        type: string
      deposit:
        type: number
      firstname:
        type: string
      fullname:
        type: string
      id:
        description: gorm.Model
        type: integer
      lastname:
        type: string
      lose:
        type: number
      otpAuthUrl:
        type: string
      partnersKey:
        type: string
      password:
        type: string
      preferredname:
        type: string
      prefix:
        type: string
      proID:
        type: string
      proStatus:
        type: string
      providerPassword:
        type: string
      role:
        type: string
      salt:
        type: string
      secret:
        type: string
      status:
        type: integer
      tempSecret:
        type: string
      token:
        type: string
      turnover:
        type: number
      updatedAt:
        type: string
      username:
        type: string
      walletid:
        type: integer
      win:
        type: number
      withdraw:
        type: number
    type: object
  users.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: boolean
    type: object
host: 167.71.100.123:3003
info:
  contact: {}
  description: Api Goteway in Go.
  title: Api Goteway in Go
  version: "1.0"
paths:
  /users/all:
    post:
      description: Get a list of all users in the database.
      parameters:
      - description: User registration info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.SwaggerBody'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SwaggerUser'
            type: array
      summary: Get all users
      tags:
      - users
  /users/balance:
    post:
      consumes:
      - application/json
      description: Get user balance in the database.
      parameters:
      - description: User balance info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerUser'
        "400":
          description: Error response
          schema:
            $ref: '#/definitions/users.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user balance
      tags:
      - users
  /users/login:
    post:
      description: Get a list of all users in the database.
      parameters:
      - description: User registration info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SwaggerUser'
            type: array
      summary: Login user
      tags:
      - users
  /users/logout:
    post:
      consumes:
      - application/json
      description: Get user balance in the database.
      parameters:
      - description: User Logout
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerUser'
        "400":
          description: Error response
          schema:
            $ref: '#/definitions/users.ErrorResponse'
      security:
      - BearerAuth: []
      summary: User Logout
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Register user in the database.
      parameters:
      - description: User registration info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerUser'
        "400":
          description: Error response
          schema:
            $ref: '#/definitions/users.ErrorResponse'
      summary: Register new user
      tags:
      - users
  /users/statement:
    post:
      consumes:
      - application/json
      description: Get user Statement in the database.
      parameters:
      - description: User Bank Statement info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.BankStatement'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerBankStatement'
        "400":
          description: Error response
          schema:
            $ref: '#/definitions/users.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user Statement
      tags:
      - users
  /users/transactions:
    post:
      consumes:
      - application/json
      description: Get user Transaction in the database.
      parameters:
      - description: User Transaction info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.TransactionSub'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerTransactionSub'
        "400":
          description: Error response
          schema:
            $ref: '#/definitions/users.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user Transaction
      tags:
      - users
swagger: "2.0"
