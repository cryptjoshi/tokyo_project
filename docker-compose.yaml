version: '3.8'

services:
  backendservice:
   container_name: backend_service
   build:
     context: ./backend
     dockerfile: dev.Dockerfile
   ports:
     - "3003:8030"
   env_file: .env
   #command: "swag init"
   volumes:
     - ./backend/:/app
     - ./backend/docs:/app/docs  # แม็พโฟลเดอร์ docs จาก host
   networks:
     - caddy

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    environment:
      - SWAGGER_JSON=/app/docs/swagger.json  # ชี้ไปยังไฟล์ swagger.json ภายในคอนเทนเนอร์
    volumes:
      - ./backend/docs:/app/docs  # แม็พโฟลเดอร์ docs จาก host (แก้ไขเป็น path ที่ถูกต้อง)
    networks:
      - caddy
  
  whoami2:
    image: traefik/whoami
    networks:
      - caddy
    labels:
      caddy: whoami2.paribrand.shop
      caddy.reverse_proxy: "{{upstreams 80}}"
      caddy.tls: "internal"

  frontend:
    container_name: frontend
    build:
        context: ./frontend
        dockerfile: ./Dockerfile
        target: development
    volumes:
        - ./frontend:/app
        - /app/node_modules
        #- /app/.next
    expose:
        - '3001'
    ports:
        - "3001:3001"
    working_dir: /app
    env_file: .env
    labels:
      caddy: paribrand.shop
      caddy.reverse_proxy: "{{upstreams 3001}}"
      caddy.tls: "internal"
    # environment:
    #    - VIRTUAL_HOST=dashboard.tsxbet.com
    #    - VIRTUAL_PORT=3001
    #    - NEXT_PUBLIC_PREFIX=PKD
    networks:
        - caddy

  consumer:
    container_name: consumer_service
    build:
      context: ./queue
      dockerfile: dev.Dockerfile
    # ports:
    #   - "3004:8030"
    # env_file: .env
    #command: "swag init"
    volumes:
      - ./queue/:/app
      #- ./backend/docs:/app/docs  # แม็พโฟลเดอร์ docs จาก host
    networks:
      - caddy

  wallet:
    container_name: wallet
    build:
      context: ./wallet
      dockerfile: dev.Dockerfile
    ports:
      - "50051:50051"
    env_file: .env
    #command: "swag init"
    volumes:
      - ./wallet/:/app
      #- ./backend/docs:/app/docs  # แม็พโฟลเดอร์ docs จาก host
    networks:
      - caddy

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: dev.Dockerfile
    # ports:
    #   - "3004:8040"
    env_file: .env
    #command: "swag init"
    volumes:
      - ./client/:/app
      #- ./backend/docs:/app/docs  # แม็พโฟลเดอร์ docs จาก host
    networks:
      - caddy

  https:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    container_name: https
    ports:
      - 80:80
      - 443:443
    env_file: .env
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./caddy_data:/data
    restart: unless-stopped

  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    environment:
      - PUID=0
      - PGID=0
      - TZ=Asia/Bangkok
      - PASSWORD=1688XdAs #optional
      - HASHED_PASSWORD= #optional
      - SUDO_PASSWORD=1688XdAs #optional
      - SUDO_PASSWORD_HASH= #optional
      - PROXY_DOMAIN=code-server.paribrand.shop #optional
      - DEFAULT_WORKSPACE=/config/workspace #optional
    volumes:
      - /data/compose/2/code/config/:/config
    labels:
      caddy: code.paribrand.shop
      caddy.reverse_proxy: "{{upstreams 8443}}"
      caddy.tls: "internal"
    ports:
      - 8443:8443
    restart: unless-stopped
    networks:
      - caddy


# networks:
#   proxy-net:


  # apigateway:
  #   container_name: api_gateway
  #   build:
  #     context: ./apigateway
  #     dockerfile: dev.Dockerfile
  #   ports:
  #     - "4005:8050"
  #   env_file: .env
  #   # environment:
  #   #   - VIRTUAL_HOST=stagging.tsxbet.com
  #   #   - VIRTUAL_PORT=4007
  #   volumes:
  #     - ./apigateway/:/app
  #   networks:
  #       - proxy-net



  # gameservice:
  #   #image: king_game_service
  #   container_name: game_service
  #   build:
  #     context: ./gameservice
  #     dockerfile: dev.Dockerfile
  #   ports:
  #     - "4007:8070"
  #   env_file: .env
  #   # environment:
  #   #   - VIRTUAL_HOST=stagging.tsxbet.com
  #   #   - VIRTUAL_PORT=4007
  #   volumes:
  #     - ./gameservice/:/app
  #   networks:
  #       - proxy-net



  # gservice:
  #   # image: gclub
  #   build:
  #     context: ./gclubservice
  #     dockerfile: Dockerfile
  #     target: base
  #   volumes:
  #     - ./gclubservice/src:/home/node/app/src
  #     - ./gclubservice/nodemon.json:/home/node/app/nodemon.json
  #   container_name: gservice
  #   expose:
  #     - '9003'
  #   ports:
  #     - '9003:9003'
  #   dns:
  #     - 8.8.8.8
  #     - 8.8.4.4
  #   command: " npm run dev"
  #   # environment:
  #   #   - VIRTUAL_HOST=gclub.tsxbet.net
  #   #   - VIRTUAL_PORT=3003
  #   env_file: .env
  #   networks:
  #     - proxy-net
volumes:
  caddy_data: {}
  
# networks:
#   proxy-net:
#       name: app-net
#       external: true
networks:
   caddy:
     external: true
